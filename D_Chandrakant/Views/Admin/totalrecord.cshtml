@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}



<div class="container">
    <div class="row mt-2">
        <div class="col-6 text-start">
            <span id="chartStartLabel" class="fw-bold text-secondary"></span>

        </div>
        <div class="col-6 text-end">
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                Start Chart From Today
            </button>
        </div>
    </div>
 <div class="row">
        <canvas id="categoryChart" width="800" height="320"></canvas>

 </div>

</div>



<<div class="modal" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm Action</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                Are you sure you want to start the chart from today?
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="startChartBtn" class="btn btn-success">Yes, Start</button>
            </div>

        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>

<script>
    let categoryChartInstance = null;

    $(document).ready(function () {
      $.ajax({
        url: '/Admin/totalorderanddeliverygraph',
        method: 'GET',
        dataType: 'json',
        success: function (response) {
          console.log(response);

           const categories = response.data.map(item => item.category);
    const orderData = response.data.map(item => item.order);
    const cuttingData = response.data.map(item => item.cutting);
    const stitchingData = response.data.map(item => item.stitching);
    const ironingData = response.data.map(item => item.ironing);

      $('#chartStartLabel').text("Chart Start From: " + new Date(response.dateshow).toLocaleDateString('en-GB').replaceAll('/', '/'));

          // Get context 
          const ctx = document.getElementById('categoryChart').getContext('2d');

          // Destroy previous chart if exists
          if (categoryChartInstance) {
            categoryChartInstance.destroy();
          }

          // Create new chart
          categoryChartInstance = new Chart(ctx, {
            type: 'bar',
            data: {
              labels: categories,
              datasets: [
                {
                  label: 'Order',
                  data: orderData,
                  backgroundColor: '#4e79a7'
                },
                {
                  label: 'Cutting',
                  data: cuttingData,
                  backgroundColor: '#f28e2c'
                },
                {
                  label: 'Stitching',
                  data: stitchingData,
                  backgroundColor: '#e15759'
                },
                {
                  label: 'Ironing',
                  data: ironingData,
                  backgroundColor: '#76b7b2'
                },
                {
                  label: 'Deliver',
                  data: ironingData,
                  backgroundColor: '#f4d35e'
                }
              ]
            },
            options: {
              responsive: true,
              plugins: {
                title: {
                  display: true,
                  text: 'Category-wise Order and Processing Status'
                },
                datalabels: {
                  anchor: 'end',
                  align: 'top',
                  color: '#000',
                  font: {
                    weight: 'bold'
                  },
                  formatter: Math.round
                }
              },
              scales: {
                x: {
                  stacked: false
                },
                y: {
                  beginAtZero: true,
                  title: {
                    display: true,
                    text: 'Count'
                  }
                }
              }
            },
            plugins: [ChartDataLabels]
          });
        },
        error: function (xhr, status, error) {
          console.error("Error loading chart data:", error);
        }
      });
    });


       $('#startChartBtn').on('click', function () {
      // Get Bootstrap 5 modal instance and hide it
      var modalEl = document.getElementById('exampleModal');
      var modal = bootstrap.Modal.getInstance(modalEl);
      modal.hide();

      // AJAX call
      $.ajax({
        url: '/Admin/StartChartFromToday', // Replace with your actual controller route
        type: 'POST',
        success: function (response) {
          alert('Chart started from today!');
             var modalEl = document.getElementById('exampleModal');
    var modal = bootstrap.Modal.getInstance(modalEl);
    modal.hide();
    window.location.reload();
          
        },
        error: function () {
          alert('Something went wrong.');
        }
      });
    });
</script>